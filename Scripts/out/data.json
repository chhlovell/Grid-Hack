{
    "project": {},
    "files": {
        "GH\\Interface\\diceSplashScreen.js": {
            "name": "GH\\Interface\\diceSplashScreen.js",
            "modules": {
                "gh": 1
            },
            "classes": {
                "HQDice": 1,
                "dss": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\Interface\\hud.js": {
            "name": "GH\\Interface\\hud.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "GH\\agent.js": {
            "name": "GH\\agent.js",
            "modules": {},
            "classes": {
                "Agent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\animation.js": {
            "name": "GH\\animation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "GH\\armour.js": {
            "name": "GH\\armour.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "GH\\assets.js": {
            "name": "GH\\assets.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "GH\\board.js": {
            "name": "GH\\board.js",
            "modules": {},
            "classes": {
                "Board": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\campaign.js": {
            "name": "GH\\campaign.js",
            "modules": {},
            "classes": {
                "Campaign": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\cell.js": {
            "name": "GH\\cell.js",
            "modules": {},
            "classes": {
                "Cell": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\door.js": {
            "name": "GH\\door.js",
            "modules": {},
            "classes": {
                "Door": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\entryTrigger.js": {
            "name": "GH\\entryTrigger.js",
            "modules": {},
            "classes": {
                "EntryTrigger": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\gh.js": {
            "name": "GH\\gh.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "GH\\item.js": {
            "name": "GH\\item.js",
            "modules": {},
            "classes": {
                "Item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\json.js": {
            "name": "GH\\json.js",
            "modules": {},
            "classes": {
                "json": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\level.js": {
            "name": "GH\\level.js",
            "modules": {},
            "classes": {
                "Level": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\manager.js": {
            "name": "GH\\manager.js",
            "modules": {},
            "classes": {
                "Mlayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\map.js": {
            "name": "GH\\map.js",
            "modules": {},
            "classes": {
                "Map": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\player.js": {
            "name": "GH\\player.js",
            "modules": {},
            "classes": {
                "Player": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\stateGame.js": {
            "name": "GH\\stateGame.js",
            "modules": {},
            "classes": {
                "stateGame": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\stateSetup.js": {
            "name": "GH\\stateSetup.js",
            "modules": {},
            "classes": {
                "stateSetup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\wall.js": {
            "name": "GH\\wall.js",
            "modules": {},
            "classes": {
                "Wall": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "GH\\weapon.js": {
            "name": "GH\\weapon.js",
            "modules": {},
            "classes": {
                "gh": 1,
                "Weapon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "StdLib\\ajax.js": {
            "name": "StdLib\\ajax.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "StdLib\\animation.js": {
            "name": "StdLib\\animation.js",
            "modules": {},
            "classes": {
                "Animation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "StdLib\\canvas2d.js": {
            "name": "StdLib\\canvas2d.js",
            "modules": {},
            "classes": {
                "Canvas2D": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "StdLib\\display.js": {
            "name": "StdLib\\display.js",
            "modules": {},
            "classes": {
                "grahpics": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "StdLib\\dom.js": {
            "name": "StdLib\\dom.js",
            "modules": {
                "stdlib": 1
            },
            "classes": {
                "stdlib": 1,
                "dom": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "StdLib\\keyboard.js": {
            "name": "StdLib\\keyboard.js",
            "modules": {
                "input": 1
            },
            "classes": {
                "input": 1,
                "keyboard": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "StdLib\\math.js": {
            "name": "StdLib\\math.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "StdLib\\pixel.js": {
            "name": "StdLib\\pixel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "StdLib\\sprite.js": {
            "name": "StdLib\\sprite.js",
            "modules": {
                "graphics": 1
            },
            "classes": {
                "Sprite": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "StdLib\\spriteStrip.js": {
            "name": "StdLib\\spriteStrip.js",
            "modules": {},
            "classes": {
                "graphics": 1,
                "SpriteStrip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "StdLib\\vec2.js": {
            "name": "StdLib\\vec2.js",
            "modules": {
                "StdLib": 1
            },
            "classes": {
                "math": 1,
                "Vec2": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "gh": {
            "name": "gh",
            "submodules": {},
            "elements": {},
            "classes": {
                "gh": 1,
                "HQDice": 1,
                "dss": 1,
                "Agent": 1,
                "Board": 1,
                "Campaign": 1,
                "Cell": 1,
                "Door": 1,
                "EntryTrigger": 1,
                "Item": 1,
                "json": 1,
                "Level": 1,
                "Mlayer": 1,
                "Map": 1,
                "Player": 1,
                "stateGame": 1,
                "stateSetup": 1,
                "Wall": 1,
                "Weapon": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "GH\\weapon.js",
            "line": 14
        },
        "graphics": {
            "name": "graphics",
            "submodules": {},
            "elements": {},
            "classes": {
                "graphics": 1,
                "Animation": 1,
                "Canvas2D": 1,
                "grahpics": 1,
                "Sprite": 1,
                "SpriteStrip": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "StdLib\\spriteStrip.js",
            "line": 14
        },
        "stdlib": {
            "name": "stdlib",
            "submodules": {},
            "elements": {},
            "classes": {
                "stdlib": 1,
                "dom": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "StdLib\\dom.js",
            "line": 12
        },
        "input": {
            "name": "input",
            "submodules": {},
            "elements": {},
            "classes": {
                "input": 1,
                "keyboard": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "StdLib\\keyboard.js",
            "line": 13
        },
        "StdLib": {
            "name": "StdLib",
            "submodules": {},
            "elements": {},
            "classes": {
                "math": 1,
                "Vec2": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "StdLib\\vec2.js",
            "line": 13
        }
    },
    "classes": {
        "gh": {
            "name": "gh",
            "shortname": "gh",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\weapon.js",
            "line": 8,
            "description": "The board class is responsible for drawing all aspects of the game state with exception of the user\ninterface which is the perview of the hud.",
            "params": [
                {
                    "name": "gh",
                    "description": "The Grid Hack namespace"
                }
            ],
            "return": {
                "description": ""
            }
        },
        "HQDice": {
            "name": "HQDice",
            "shortname": "HQDice",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\Interface\\diceSplashScreen.js",
            "line": 11,
            "is_constructor": 1
        },
        "dss": {
            "name": "dss",
            "shortname": "dss",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\Interface\\diceSplashScreen.js",
            "line": 38,
            "is_constructor": 1
        },
        "Agent": {
            "name": "Agent",
            "shortname": "Agent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\agent.js",
            "line": 22,
            "is_constructor": 1,
            "params": [
                {
                    "name": "templateID",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "uniqueID",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "team",
                    "description": ""
                },
                {
                    "name": "body",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "mind",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "baseDefence",
                    "description": ""
                },
                {
                    "name": "mainHand",
                    "description": ""
                },
                {
                    "name": "offHand",
                    "description": ""
                },
                {
                    "name": "chest",
                    "description": ""
                },
                {
                    "name": "head",
                    "description": ""
                },
                {
                    "name": "moveDice",
                    "description": ""
                },
                {
                    "name": "baseMove",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "spellList",
                    "description": ""
                },
                {
                    "name": "inventory",
                    "description": ""
                },
                {
                    "name": "sprites",
                    "description": ""
                },
                {
                    "name": "animations",
                    "description": ""
                }
            ]
        },
        "Board": {
            "name": "Board",
            "shortname": "Board",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\board.js",
            "line": 17,
            "is_constructor": 1,
            "params": [
                {
                    "name": "canvasId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": ""
            }
        },
        "Campaign": {
            "name": "Campaign",
            "shortname": "Campaign",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\campaign.js",
            "line": 10,
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "introText",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "levels",
                    "description": "",
                    "type": "[Level]"
                }
            ]
        },
        "Cell": {
            "name": "Cell",
            "shortname": "Cell",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\cell.js",
            "line": 12,
            "description": "Description\nborder {\n\ttop: {\n\t\t\t\"passable\" : true/false,\n\t\t\t\"transparent\" : true/false,\n\t\t\t\"door\" : true/false,\n\t\t\t\"open\" : true/false,\n\t\t\t\"locked\" : true/false,\n\t\t\t\"imageStates\" : {\n\t\t\t}\n\t\t }\n\tleft: {}\n}",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The location of the cell on the x axis.",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "The location of the cell on the y axis.",
                    "type": "Integer"
                },
                {
                    "name": "border",
                    "description": ""
                },
                {
                    "name": "agents",
                    "description": "A list of agents occupying the cell.",
                    "type": "[Agent]"
                },
                {
                    "name": "items",
                    "description": "A list of items on the cell.",
                    "type": "[Item]"
                },
                {
                    "name": "triggers",
                    "description": "A list of triggers on the cell.",
                    "type": "[Trigger]"
                },
                {
                    "name": "ptrSprite",
                    "description": "The name of the floor sprite which should be drawn.",
                    "type": "graphics.Sprite"
                },
                {
                    "name": "rotation",
                    "description": "The degrees to which the image of the cell should be \nrotated when drawn. For the purposes of use within a grid system this should be\nlimited to a factor of 90 degrees.",
                    "type": "Float"
                }
            ],
            "return": {
                "description": ""
            }
        },
        "Door": {
            "name": "Door",
            "shortname": "Door",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\door.js",
            "line": 13,
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "side",
                    "description": "Values can include \"top\" \"left\" \"right\" \"bottom\".",
                    "type": "String"
                },
                {
                    "name": "open",
                    "description": "",
                    "type": "Bool"
                }
            ]
        },
        "EntryTrigger": {
            "name": "EntryTrigger",
            "shortname": "EntryTrigger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\entryTrigger.js",
            "line": 6,
            "description": "Entry triggers are by default active and only become in-active after the setup game state has\nbeen completed.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                }
            ]
        },
        "Item": {
            "name": "Item",
            "shortname": "Item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\item.js",
            "line": 11,
            "description": "Items are cosmetic features on a board which a player might potentially interract with.\nItems are 2 dimensional constructs with a width and height, with the x,y coordinate indicating\nthe upper left coordinate of the item on the board.  Each board cell has an item queue,\neach element of which is a pointer to the Item object.  Thus multiple cells may point to a\nsingle Item.\n\nIt is expected in future to add a 'mask' parameter which indicates which parts of the 2\ndimensional space are actually taken up by the item.  This will allow for irregularly shaped\nitems in design.",
            "params": [
                {
                    "name": "name",
                    "description": "The descriptive name of this item.",
                    "type": "String"
                },
                {
                    "name": "uniqueID",
                    "description": "The unique identifier of this Item.",
                    "type": "String"
                },
                {
                    "name": "templateRef",
                    "description": "The reference string of the Item in the Item template file.",
                    "type": "String"
                },
                {
                    "name": "description",
                    "description": "A description of the item.",
                    "type": "String"
                },
                {
                    "name": "spriteID",
                    "description": "The identifier of the items display sprite in the sprite data set.",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "The x coordinate of the upper left corner of the Item on the board.",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "The y coordinate of the upper left corner of the Item on the board.",
                    "type": "Integer"
                },
                {
                    "name": "width",
                    "description": "The width of the item (cells) on the board.",
                    "type": "Integer"
                },
                {
                    "name": "height",
                    "description": "The height of the item (cells) on the board.",
                    "type": "Integer"
                },
                {
                    "name": "rotation",
                    "description": "The rotation of the object in degrees.",
                    "type": "Integer"
                },
                {
                    "name": "obstacle",
                    "description": "Identifies whether or not the item is an obstacle for the purposes of agent movement.",
                    "type": "Bool"
                },
                {
                    "name": "usable",
                    "description": "Identifies whether or not an agent can interract with the item.",
                    "type": "Bool"
                },
                {
                    "name": "mask",
                    "description": ""
                }
            ]
        },
        "json": {
            "name": "json",
            "shortname": "json",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\json.js",
            "line": 15
        },
        "Level": {
            "name": "Level",
            "shortname": "Level",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\level.js",
            "line": 13,
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "introText",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        "Mlayer": {
            "name": "Mlayer",
            "shortname": "Mlayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\manager.js",
            "line": 13,
            "is_constructor": 1,
            "params": [
                {
                    "name": "players",
                    "description": "",
                    "type": "[Player]"
                }
            ]
        },
        "Map": {
            "name": "Map",
            "shortname": "Map",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\map.js",
            "line": 32,
            "is_constructor": 1
        },
        "Player": {
            "name": "Player",
            "shortname": "Player",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\player.js",
            "line": 17,
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "AI",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "[Agent]"
                }
            ]
        },
        "stateGame": {
            "name": "stateGame",
            "shortname": "stateGame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\stateGame.js",
            "line": 12,
            "is_constructor": 1,
            "itemtype": "method"
        },
        "stateSetup": {
            "name": "stateSetup",
            "shortname": "stateSetup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\stateSetup.js",
            "line": 13,
            "description": "The role of the stateSetup class is to provide the mechanics for setting up the game board prior to\nrunning the actual game.  This includes player placement of heroes on the board if there are entry\ntriggers.  Note that entry/exit doors opperated in a different manner and utilized as part of the \nactual game.",
            "is_constructor": 1,
            "return": {
                "description": ""
            }
        },
        "Wall": {
            "name": "Wall",
            "shortname": "Wall",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\wall.js",
            "line": 13,
            "is_constructor": 1,
            "params": [
                {
                    "name": "passable",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "transparent",
                    "description": "",
                    "type": "Bool"
                }
            ]
        },
        "Weapon": {
            "name": "Weapon",
            "shortname": "Weapon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "GH\\weapon.js",
            "line": 14,
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "resRef",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "attack",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "hands",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "range",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "diagonal",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "cost",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "apram": "{string} size"
        },
        "graphics": {
            "name": "graphics",
            "shortname": "graphics",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "StdLib\\spriteStrip.js",
            "line": 7
        },
        "Animation": {
            "name": "Animation",
            "shortname": "Animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "StdLib\\animation.js",
            "line": 13,
            "description": "This animation class is depreciated with respect to the Grid Hack engine.",
            "deprecated": true,
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "numFrames",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "frameWidth",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "repeat",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "speed",
                    "description": "The time in milliseconds between each frame.",
                    "type": "Float"
                },
                {
                    "name": "index",
                    "description": "This parameter is optional"
                }
            ]
        },
        "Canvas2D": {
            "name": "Canvas2D",
            "shortname": "Canvas2D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "StdLib\\canvas2d.js",
            "line": 14,
            "is_constructor": 1,
            "params": [
                {
                    "name": "canvasId",
                    "description": "The Id of the canvas DOM object.",
                    "type": "String"
                },
                {
                    "name": "top",
                    "description": "The top pixel coordinate of the canvas DOM object.",
                    "type": "String"
                },
                {
                    "name": "left",
                    "description": "The left pixel coordiante of the canvas DOM object.",
                    "type": "String"
                },
                {
                    "name": "width",
                    "description": "The pixel width of the canvas DOM object.",
                    "type": "Integer"
                },
                {
                    "name": "height",
                    "description": "The pixel height of the canvas DOM object.",
                    "type": "Integer"
                },
                {
                    "name": "zindex",
                    "description": "The depth of the canvas DOM object.",
                    "type": "Integer"
                }
            ]
        },
        "grahpics": {
            "name": "grahpics",
            "shortname": "grahpics",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "StdLib\\display.js",
            "line": 8,
            "is_constructor": 1
        },
        "stdlib": {
            "name": "stdlib",
            "shortname": "stdlib",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "stdlib",
            "namespace": "",
            "file": "StdLib\\dom.js",
            "line": 6
        },
        "dom": {
            "name": "dom",
            "shortname": "dom",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "stdlib",
            "namespace": "",
            "file": "StdLib\\dom.js",
            "line": 12
        },
        "input": {
            "name": "input",
            "shortname": "input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "input",
            "namespace": "",
            "file": "StdLib\\keyboard.js",
            "line": 7
        },
        "keyboard": {
            "name": "keyboard",
            "shortname": "keyboard",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "input",
            "namespace": "",
            "file": "StdLib\\keyboard.js",
            "line": 13
        },
        "math": {
            "name": "math",
            "shortname": "math",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StdLib",
            "namespace": "",
            "file": "StdLib\\vec2.js",
            "line": 7,
            "params": [
                {
                    "name": "math",
                    "description": ""
                }
            ]
        },
        "Sprite": {
            "name": "Sprite",
            "shortname": "Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "StdLib\\sprite.js",
            "line": 30,
            "description": "Description",
            "itemtype": "method",
            "return": {
                "description": ""
            }
        },
        "SpriteStrip": {
            "name": "SpriteStrip",
            "shortname": "SpriteStrip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "StdLib\\spriteStrip.js",
            "line": 14,
            "is_constructor": 1,
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "numFrames",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "frameWidth",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "index",
                    "description": "This is an optional parameter. It allows the user to create a string index for frames."
                }
            ]
        },
        "Vec2": {
            "name": "Vec2",
            "shortname": "Vec2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StdLib",
            "namespace": "",
            "file": "StdLib\\vec2.js",
            "line": 13,
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Float"
                }
            ]
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "GH\\Interface\\diceSplashScreen.js",
            "line": 20,
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "frame",
                    "description": "",
                    "type": "String || integer"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "HQDice",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\diceSplashScreen.js",
            "line": 44,
            "description": "Private globals",
            "class": "dss",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\diceSplashScreen.js",
            "line": 53,
            "description": "Public methods",
            "class": "dss",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\diceSplashScreen.js",
            "line": 57,
            "itemtype": "method",
            "name": "setupInput",
            "class": "dss",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\diceSplashScreen.js",
            "line": 64,
            "itemtype": "method",
            "name": "setVisible",
            "params": [
                {
                    "name": "visible",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "dss",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\diceSplashScreen.js",
            "line": 76,
            "description": "Change the visibility of the dice splash screen.\nOn the assumption that it is only visible following an attack, also clear the existing\ndice canvas elements from the display.",
            "itemtype": "method",
            "name": "onClick",
            "class": "dss",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\diceSplashScreen.js",
            "line": 91,
            "description": "Add the dice rolled for attack and defence to the screen as canvas elements for\ndisplay. Randomly generate what images should appear for 'misses'.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "numHitDice",
                    "description": ""
                },
                {
                    "name": "hits",
                    "description": ""
                },
                {
                    "name": "numDefenceDice",
                    "description": ""
                },
                {
                    "name": "defence",
                    "description": ""
                }
            ],
            "class": "dss",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\diceSplashScreen.js",
            "line": 174,
            "description": "Remove the dice 'canvas' elements from the display.",
            "itemtype": "method",
            "name": "clear",
            "class": "dss",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 8,
            "description": "Private constants",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 29,
            "description": "Private globals",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 35,
            "description": "Private methods",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 39,
            "description": "This method sets the visibility of a given node and all of its children to the \ngiven visibility.\nThis method is no longer utilized by Grid Hack. Use stdlib.dom.setNodeTreeStyle instead.",
            "itemtype": "method",
            "name": "setVisibility",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "DOM"
                },
                {
                    "name": "visible",
                    "description": "Acceptable parameters are \"hidden\" or \"visible\".",
                    "type": "String"
                }
            ],
            "deprecated": true,
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 55,
            "description": "Public Methods",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 59,
            "itemtype": "method",
            "name": "setup",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 85,
            "description": "Active Agent Display",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 89,
            "description": "Setup the active agent display hud interface.\nThis includes initializing the tab visibility and height parameters.",
            "itemtype": "method",
            "name": "setupAAD",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 104,
            "description": "This method responds to a click event on the active agent tabs and allowing the user\nto view different sets of information via the tabs.",
            "itemtype": "method",
            "name": "aaTabOnClick",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 129,
            "itemtype": "method",
            "name": "update",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 160,
            "description": "Handle any graphical updates to the hud which require drawing.",
            "itemtype": "method",
            "name": "render",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 180,
            "itemtype": "method",
            "name": "setupInput",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 191,
            "itemtype": "method",
            "name": "onEndTurn",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 198,
            "description": "Setup the next players turn",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 214,
            "description": "Hud maintenance re new turn",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 219,
            "description": "Center board view onto new agent",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 225,
            "itemtype": "method",
            "name": "onActionStateButton",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 229,
            "description": "Handle the cosmetic changs of the actions state buttons",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 240,
            "description": "Update the current player/agents action state",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 263,
            "itemtype": "method",
            "name": "clearActionStateButtons",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\Interface\\hud.js",
            "line": 274,
            "itemtype": "method",
            "name": "displayAttack",
            "params": [
                {
                    "name": "attack",
                    "description": ""
                }
            ],
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 83,
            "description": "This method is used to load an agents initially equiped items into the inventory array.\nThis method should only be used on creation of a new agent and not called externally.\nIt is assumed that equiped items do not exist in the agents 'inventory' at the time of its\ninitialization.",
            "itemtype": "method",
            "name": "loadInventory",
            "params": [
                {
                    "name": "An",
                    "description": "instnace of a newly created agent.",
                    "type": "gh.Agent"
                }
            ],
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 108,
            "itemtype": "method",
            "name": "loadActionStates",
            "params": [
                {
                    "name": "animations",
                    "description": ""
                }
            ],
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 129,
            "itemtype": "method",
            "name": "getCurrentHealth",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 136,
            "itemtype": "method",
            "name": "getCurrentMind",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 143,
            "itemtype": "method",
            "name": "getOpponents",
            "params": [
                {
                    "name": "teamIndex",
                    "description": ""
                },
                {
                    "name": "allAgents",
                    "description": ""
                }
            ],
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 161,
            "itemtype": "method",
            "name": "getClosestPathTo",
            "params": [
                {
                    "name": "target",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 185,
            "itemtype": "method",
            "name": "getClosestOpponent",
            "params": [
                {
                    "name": "teamIndex",
                    "description": ""
                },
                {
                    "name": "allAgents",
                    "description": "",
                    "type": "gh.Agent[]"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 220,
            "itemtype": "method",
            "name": "canMove",
            "params": [
                {
                    "name": "direction",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "map",
                    "description": ""
                },
                {
                    "name": "from",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 302,
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "direction",
                    "description": "This can be 'up' 'down' 'left' and 'right'.",
                    "type": "String"
                },
                {
                    "name": "map",
                    "description": "A 2d array of cells.",
                    "type": "gh.Cell[][]"
                }
            ],
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 355,
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "assets",
                    "description": ""
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 374,
            "itemtype": "method",
            "name": "isClicked",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "sprites",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 388,
            "description": "Determines whether or not the target is hostile to the agent",
            "itemtype": "method",
            "name": "isHostile",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "gh.Agent"
                },
                {
                    "name": "teams",
                    "description": ""
                }
            ],
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 405,
            "itemtype": "method",
            "name": "getDefenceDice",
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 429,
            "description": "A human agent successfully defends on a 1 or 2.\nA computer agent successfully defends on a 1.",
            "itemtype": "method",
            "name": "getDefence",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 463,
            "itemtype": "method",
            "name": "canAttack",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Agent"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 481,
            "itemtype": "method",
            "name": "attack",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "gh.Agent"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\agent.js",
            "line": 504,
            "itemtype": "method",
            "name": "damageHealth",
            "params": [
                {
                    "name": "damage",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "GH\\animation.js",
            "line": 41,
            "itemtype": "method",
            "name": "getPixelAt",
            "params": [
                {
                    "name": "x",
                    "description": "The relative position of the mouse x coordinate with respect to a cell's boundaries.",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The relative position of the mouse y coordinate with respect to a cell's boundaries.",
                    "type": "Float"
                },
                {
                    "name": "tileSize",
                    "description": "The size of each cell in the display at a scale of 1.",
                    "type": "Float"
                }
            ],
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\board.js",
            "line": 67,
            "description": "Draw the board to the canvas.  The drawing order is as follows:\n1) the floor tiles\n2) the borders (walls, doors, etc)\n3) items and other objects\n4) agents\n5) other visual effects\nNote that triggers can change what is to be drawn at any level by changing the sate of a\nparticular object.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "team",
                    "description": "The team which is viewing the board.",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Board",
            "module": "gh"
        },
        {
            "file": "GH\\board.js",
            "line": 103,
            "itemtype": "method",
            "name": "centerOn",
            "class": "Board",
            "module": "gh"
        },
        {
            "file": "GH\\cell.js",
            "line": 2,
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\cell.js",
            "line": 56,
            "itemtype": "method",
            "name": "drawFloor",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "team",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "GH\\cell.js",
            "line": 87,
            "itemtype": "method",
            "name": "drawBorder",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "team",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "GH\\cell.js",
            "line": 112,
            "itemtype": "method",
            "name": "drawAgents",
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "GH\\cell.js",
            "line": 135,
            "itemtype": "method",
            "name": "drawItems",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "team",
                    "description": ""
                }
            ],
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "GH\\cell.js",
            "line": 159,
            "itemtype": "method",
            "name": "setMouseFocus",
            "params": [
                {
                    "name": "mouseX",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "mouseY",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "sprites",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "GH\\cell.js",
            "line": 197,
            "itemtype": "method",
            "name": "removeAgent",
            "params": [
                {
                    "name": "agent",
                    "description": "",
                    "type": "gh.Agent"
                }
            ],
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "GH\\cell.js",
            "line": 211,
            "itemtype": "method",
            "name": "onClick",
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "GH\\cell.js",
            "line": 271,
            "itemtype": "method",
            "name": "getClicked",
            "params": [
                {
                    "name": "mouseX",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "mouseY",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "sprites",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "GH\\door.js",
            "line": 31,
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": "Door",
            "module": "gh"
        },
        {
            "file": "GH\\door.js",
            "line": 90,
            "itemtype": "method",
            "name": "isMouseOver",
            "params": [
                {
                    "name": "relx",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "rely",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "side",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "sprites",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Door",
            "module": "gh"
        },
        {
            "file": "GH\\door.js",
            "line": 156,
            "itemtype": "method",
            "name": "isClicked",
            "return": {
                "description": ""
            },
            "class": "Door",
            "module": "gh"
        },
        {
            "file": "GH\\door.js",
            "line": 161,
            "description": "Determine which image should be checked\nThis code is a bit brute force.\nMay need to consider including a door state variable which points to the relevant\nimage in the imageState variable.",
            "class": "Door",
            "module": "gh"
        },
        {
            "file": "GH\\entryTrigger.js",
            "line": 19,
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": "EntryTrigger",
            "module": "gh"
        },
        {
            "file": "GH\\entryTrigger.js",
            "line": 42,
            "description": "Return true if all heroes have been placed.\nReturn false if not all heroes in the roster have been placed.",
            "itemtype": "method",
            "name": "onClick",
            "params": [
                {
                    "name": "roster",
                    "description": ""
                },
                {
                    "name": "map",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "EntryTrigger",
            "module": "gh"
        },
        {
            "file": "GH\\gh.js",
            "line": 9,
            "description": "Public globals",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\gh.js",
            "line": 19,
            "description": "Public methods",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\gh.js",
            "line": 23,
            "description": "Prior to running the game the following aspects must be initialized/setup:\no The display\no The input\no The graphics\no Load the campaign/level data",
            "itemtype": "method",
            "name": "setup",
            "params": [
                {
                    "name": "divDisplay",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "canvasHud",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "canvasBoard",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\gh.js",
            "line": 64,
            "description": "This it a 'test' function which preloads a player with agents for use in the game.",
            "itemtype": "method",
            "name": "setupPlayer",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\gh.js",
            "line": 191,
            "description": "Initialize the games display.  This includes creating canvas objects for both the hud and the\ngame board.",
            "itemtype": "method",
            "name": "setupDisplay",
            "params": [
                {
                    "name": "divDisplay",
                    "description": "Id of the containing div DOM object.",
                    "type": "String"
                },
                {
                    "name": "canvasHud",
                    "description": "Id of the hud canvas DOM object.",
                    "type": "String"
                },
                {
                    "name": "canvasBoard",
                    "description": "Id of the board canvas DOM object.",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\gh.js",
            "line": 217,
            "description": "Setup the mouse and keyboard input for processing.",
            "itemtype": "method",
            "name": "setupInput",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\gh.js",
            "line": 234,
            "itemtype": "method",
            "name": "buildImageData",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\gh.js",
            "line": 249,
            "itemtype": "method",
            "name": "start",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\item.js",
            "line": 52,
            "description": "Draw the item to the given canvas.  Rotation is allowed for, rotaton not around the\ncenter of an image, preserves the upper left corner of the item on the map.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                }
            ],
            "class": "Item",
            "module": "gh"
        },
        {
            "file": "GH\\item.js",
            "line": 102,
            "description": "This method returns a list of items in a item list that are located at a\nparticular (x,y) position on the board.",
            "itemtype": "method",
            "name": "getItemsAt",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "[gh.Item]"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Item",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 20,
            "description": "Private globals",
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 25,
            "itemtype": "method",
            "name": "loadCampaign",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the current campaign",
                    "type": "String"
                }
            ],
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 53,
            "itemtype": "method",
            "name": "getData",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 65,
            "itemtype": "method",
            "name": "loadLevel",
            "params": [
                {
                    "name": "campaignName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "levelName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "jsonAgentTemplates",
                    "description": "",
                    "type": "JSON"
                },
                {
                    "name": "jsonWeaponTemplates",
                    "description": "",
                    "type": "JSON"
                },
                {
                    "name": "jsonItemTemplates",
                    "description": "",
                    "type": "JSON"
                },
                {
                    "name": "jsonArmourTemplates",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 94,
            "itemtype": "method",
            "name": "getHeroes",
            "params": [
                {
                    "name": "jsonData",
                    "description": "An array of available hero template IDs.",
                    "type": "[string]"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 109,
            "itemtype": "method",
            "name": "getPlayers",
            "params": [
                {
                    "name": "jsonPlayers",
                    "description": "",
                    "type": "[gh.Player]"
                },
                {
                    "name": "jsonAgentTemplates",
                    "description": "",
                    "type": "JSON"
                },
                {
                    "name": "jsonWeaponTemplates",
                    "description": "",
                    "type": "JSON"
                },
                {
                    "name": "jsonArmourTemplates",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 141,
            "itemtype": "method",
            "name": "getWeapon",
            "params": [
                {
                    "name": "resRef",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "jsonWeaponTemplates",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 162,
            "itemtype": "method",
            "name": "getArmour",
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 179,
            "itemtype": "method",
            "name": "getRoster",
            "params": [
                {
                    "name": "jsonRoster",
                    "description": "",
                    "type": "[gh.Agent]"
                },
                {
                    "name": "jsonAgentTemplates",
                    "description": "",
                    "type": "JSON"
                },
                {
                    "name": "jsonWeaponTemplates",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 235,
            "description": "This method builds the digital map data for a particular campaign level.\nThe map data consists of a board, which is a 2d array of cells.  The cells\ncontain all the relevant information about its content, including pointers to\nitems, agents and trigger objects located on any particular cell.",
            "itemtype": "method",
            "name": "getMapData",
            "params": [
                {
                    "name": "jsonMapData",
                    "description": "",
                    "type": "JSON"
                },
                {
                    "name": "players",
                    "description": "",
                    "type": "[gh.Player]"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 288,
            "description": "This method parses through a list of player's rosters and returns a list of all those\nagents determined to be at a given (x,y) location on the board.",
            "itemtype": "method",
            "name": "getAgentsAt",
            "params": [
                {
                    "name": "players",
                    "description": "",
                    "type": "[gh.Player]"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 310,
            "itemtype": "method",
            "name": "getTriggers",
            "params": [
                {
                    "name": "jsonTriggers",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 332,
            "itemtype": "method",
            "name": "findTrigger",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 350,
            "description": "Given a list of JSON items create a list of items for the mapData data structure.",
            "itemtype": "method",
            "name": "getItems",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 383,
            "itemtype": "method",
            "name": "getBorder",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "jsonCell",
                    "description": ""
                }
            ],
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 419,
            "itemtype": "method",
            "name": "fillBorders",
            "params": [
                {
                    "name": "map",
                    "description": ""
                }
            ],
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 442,
            "itemtype": "method",
            "name": "loadAssets",
            "params": [
                {
                    "name": "assets",
                    "description": ""
                },
                {
                    "name": "campaignName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "levelName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 465,
            "itemtype": "method",
            "name": "getMapSpriteList",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "jsonMap",
                    "description": "",
                    "type": "JSON"
                },
                {
                    "name": "sprites",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 486,
            "itemtype": "method",
            "name": "getBorderSprites",
            "params": [
                {
                    "name": "path",
                    "description": "The folder in which the border sprites are located.",
                    "type": "String"
                },
                {
                    "name": "jsonBorderSprites",
                    "description": "The JSON data which includes the border sprite information.",
                    "type": "JSON"
                },
                {
                    "name": "sprites",
                    "description": "The asset sprite object which is to be updated with the new sprites.",
                    "type": "gh.assets.sprites"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 502,
            "itemtype": "method",
            "name": "getAgentSprites",
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\json.js",
            "line": 528,
            "description": "This method loads the item sprites into the gh.assets.sprites list.",
            "itemtype": "method",
            "name": "getItemSprites",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "jsonItemTemplates",
                    "description": "",
                    "type": "JSON"
                },
                {
                    "name": "sprites",
                    "description": "",
                    "type": "gh.assets.sprites"
                }
            ],
            "class": "json",
            "module": "gh"
        },
        {
            "file": "GH\\level.js",
            "line": 29,
            "itemtype": "method",
            "name": "drawTriggers",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Level",
            "module": "gh"
        },
        {
            "file": "GH\\level.js",
            "line": 46,
            "itemtype": "method",
            "name": "setupVisibility",
            "return": {
                "description": ""
            },
            "class": "Level",
            "module": "gh"
        },
        {
            "file": "GH\\manager.js",
            "line": 23,
            "itemtype": "method",
            "name": "addPlayer",
            "params": [
                {
                    "name": "player",
                    "description": "",
                    "type": "Player"
                }
            ],
            "class": "Mlayer",
            "module": "gh"
        },
        {
            "file": "GH\\manager.js",
            "line": 31,
            "itemtype": "method",
            "name": "getActivePlayer",
            "return": {
                "description": ""
            },
            "class": "Mlayer",
            "module": "gh"
        },
        {
            "file": "GH\\manager.js",
            "line": 43,
            "itemtype": "method",
            "name": "setNextTurn",
            "return": {
                "description": ""
            },
            "class": "Mlayer",
            "module": "gh"
        },
        {
            "file": "GH\\manager.js",
            "line": 58,
            "itemtype": "method",
            "name": "getAgentsAd",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Mlayer",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 13,
            "itemtype": "method",
            "name": "getMapDist",
            "params": [
                {
                    "name": "x1",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "x2",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y2",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 40,
            "itemtype": "method",
            "name": "drawFloor",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "team",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 58,
            "itemtype": "method",
            "name": "drawBorders",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "team",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 76,
            "itemtype": "method",
            "name": "drawItems",
            "params": [
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 90,
            "itemtype": "method",
            "name": "drawAgents",
            "params": [
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 104,
            "itemtype": "method",
            "name": "drawTriggers",
            "params": [
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 115,
            "description": "Set the map visibility for all cells to the given visibility for all factions.",
            "itemtype": "method",
            "name": "clearVisibility",
            "params": [
                {
                    "name": "visibility",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 132,
            "itemtype": "method",
            "name": "updateAgentVisibility",
            "params": [
                {
                    "name": "agent",
                    "description": "",
                    "type": "gh.Agent"
                }
            ],
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 155,
            "itemtype": "method",
            "name": "setRayVisibility",
            "params": [
                {
                    "name": "ray",
                    "description": ""
                },
                {
                    "name": "faction",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "visibility",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 202,
            "itemtype": "method",
            "name": "getLine",
            "params": [
                {
                    "name": "x0",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y0",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "x1",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 271,
            "description": "This method is depreciated albeit it may be of some future use.\nThis method returns the cells adjacent to a point on the map, or if given\nan agent, those adjacent cells which an agen can move into (not accounting for\nhow much remaining movement an agent currently has).",
            "itemtype": "method",
            "name": "getAdjacentCells",
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 321,
            "description": "A* algorithm as sourced from http://web.mit.edu/eranki/www/tutorials/search/, albeit\nmodified slighly to suit the needs of this application.\nNot necessarily optimized and differs from a prior implementation of mine.\nEg. building a path list once the destination has been reached is a minor weakness\nin optimality as the application is intersted in the 'first' move, not the last.\n\n\t\tinitialize the open list\n\t\tinitialize the closed list\n\t\tput the starting node on the open list (you can leave its f at zero)\n\n\t\twhile the open list is not empty\n\t\t    find the node with the least f on the open list, call it \"q\"\n\t\t    pop q off the open list\n\t\t    generate q's 8 successors and set their parents to q\n\t\t    for each successor\n\t\t    \tif successor is the goal, stop the search\n\t\t        successor.g = q.g + distance between successor and q\n\t\t        successor.h = distance from goal to successor\n\t\t        successor.f = successor.g + successor.h\n\n\t\t        if a node with the same position as successor is in the OPEN list \\\n\t\t            which has a lower f than successor, skip this successor\n\t\t        if a node with the same position as successor is in the CLOSED list \\ \n\t\t            which has a lower f than successor, skip this successor\n\t\t        otherwise, add the node to the open list\n\t\t    end\n\t\t    push q on the closed list\n\t\tend",
            "itemtype": "method",
            "name": "aStar",
            "params": [
                {
                    "name": "origin",
                    "description": ""
                },
                {
                    "name": "destination",
                    "description": ""
                }
            ],
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\map.js",
            "line": 395,
            "itemtype": "method",
            "name": "canMove",
            "params": [
                {
                    "name": "agent",
                    "description": "",
                    "type": "gh.Agent"
                },
                {
                    "name": "from",
                    "description": "",
                    "type": "gh.Cell"
                },
                {
                    "name": "direction",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "map",
                    "description": ""
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "gh.Agent"
                }
            ],
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "GH\\player.js",
            "line": 37,
            "description": "This method sets the players currently active agent to the next agent in the roster.\nIf the last agent in the roster has completed its turn, return false.\nIf the last agent in the roster has not completed its turn return true.",
            "itemtype": "method",
            "name": "setNextTurn",
            "return": {
                "description": ""
            },
            "class": "Player",
            "module": "gh"
        },
        {
            "file": "GH\\player.js",
            "line": 54,
            "itemtype": "method",
            "name": "getActiveAgent",
            "return": {
                "description": ""
            },
            "class": "Player",
            "module": "gh"
        },
        {
            "file": "GH\\player.js",
            "line": 74,
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": ""
            },
            "class": "Player",
            "module": "gh"
        },
        {
            "file": "GH\\stateGame.js",
            "line": 23,
            "description": "This method loads the next agent's turn.  This is done by first looking for\nthe next agent in the current players roster, or if the last agent has \nfinished its turn, change to the next players turn with the fist agent in\nthat players roster being the next one to proceed.\n\nAt this juncture it is also necessary to clear the active agent display\ninventory list and load the new articles.",
            "itemtype": "method",
            "name": "endTurn",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "GH\\stateGame.js",
            "line": 59,
            "itemtype": "method",
            "name": "update",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "GH\\stateGame.js",
            "line": 73,
            "description": "The AI\n\nMOVE THIS TO EITHER AGENT OR AN INDEPENDENT CLASS/OBJECT STRUCTURE\n\nAttack the target if in range\nDetermine the most suitable target\nMove to within range of target",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "GH\\stateGame.js",
            "line": 122,
            "description": "handle agent input",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "GH\\stateGame.js",
            "line": 127,
            "description": "Spacebar to center on active agent",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "GH\\stateGame.js",
            "line": 135,
            "description": "Handle agent movement",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "GH\\stateGame.js",
            "line": 214,
            "itemtype": "method",
            "name": "render",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "GH\\stateSetup.js",
            "line": 24,
            "description": "For the moment assume that the game has only one player who is playing against the computer.",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": ""
            },
            "class": "stateSetup",
            "module": "gh"
        },
        {
            "file": "GH\\stateSetup.js",
            "line": 85,
            "description": "Proceed to stateGame.\nInitialize the game hud and stateGame objects.",
            "class": "stateSetup",
            "module": "gh"
        },
        {
            "file": "GH\\stateSetup.js",
            "line": 113,
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": ""
            },
            "class": "stateSetup",
            "module": "gh"
        },
        {
            "file": "GH\\wall.js",
            "line": 27,
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "tileSize",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": "Wall",
            "module": "gh"
        },
        {
            "file": "GH\\wall.js",
            "line": 55,
            "itemtype": "method",
            "name": "isMouseOver",
            "class": "Wall",
            "module": "gh"
        },
        {
            "file": "GH\\wall.js",
            "line": 62,
            "itemtype": "method",
            "name": "isClicked",
            "class": "Wall",
            "module": "gh"
        },
        {
            "file": "GH\\weapon.js",
            "line": 38,
            "description": "Returns the number of successful hits when attacking with this weapon.\nA 4+ on a d6 is a hit.",
            "itemtype": "method",
            "name": "attack",
            "return": {
                "description": ""
            },
            "class": "Weapon",
            "module": "gh"
        },
        {
            "file": "StdLib\\ajax.js",
            "line": 5,
            "description": "Description",
            "itemtype": "method",
            "name": "getAJAX",
            "params": [
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "return": {
                "description": "Literal"
            },
            "class": "graphics",
            "module": "gh"
        },
        {
            "file": "StdLib\\animation.js",
            "line": 36,
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "Animation",
            "module": "graphics"
        },
        {
            "file": "StdLib\\canvas2d.js",
            "line": 37,
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "top",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "left",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Canvas2D",
            "module": "graphics"
        },
        {
            "file": "StdLib\\canvas2d.js",
            "line": 51,
            "itemtype": "method",
            "name": "onClick",
            "return": {
                "description": ""
            },
            "class": "Canvas2D",
            "module": "graphics"
        },
        {
            "file": "StdLib\\display.js",
            "line": 15,
            "description": "Class Display",
            "class": "grahpics",
            "module": "graphics"
        },
        {
            "file": "StdLib\\display.js",
            "line": 23,
            "description": "Public methods",
            "class": "grahpics",
            "module": "graphics"
        },
        {
            "file": "StdLib\\dom.js",
            "line": 17,
            "description": "Sets a style element of a DOM node and all of its children to a given value.",
            "itemtype": "method",
            "name": "setNodeTreeStyle",
            "params": [
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "paramater",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "dom",
            "module": "stdlib"
        },
        {
            "file": "StdLib\\dom.js",
            "line": 31,
            "description": "This method removes all the children of a specified node.",
            "itemtype": "method",
            "name": "removeChildren",
            "params": [
                {
                    "name": "node",
                    "description": ""
                }
            ],
            "class": "dom",
            "module": "stdlib"
        },
        {
            "file": "StdLib\\keyboard.js",
            "line": 18,
            "description": "global constants",
            "class": "keyboard",
            "module": "input"
        },
        {
            "file": "StdLib\\keyboard.js",
            "line": 38,
            "itemtype": "event",
            "name": "keyDown",
            "params": [
                {
                    "name": "evt",
                    "description": ""
                }
            ],
            "class": "keyboard",
            "module": "input"
        },
        {
            "file": "StdLib\\keyboard.js",
            "line": 50,
            "itemtype": "event",
            "name": "keyUp",
            "params": [
                {
                    "name": "evt",
                    "description": ""
                }
            ],
            "class": "keyboard",
            "module": "input"
        },
        {
            "file": "StdLib\\keyboard.js",
            "line": 60,
            "itemtype": "method",
            "name": "isPressed",
            "params": [
                {
                    "name": "key",
                    "description": "ASCII key stroke value",
                    "type": "Integer"
                }
            ],
            "class": "keyboard",
            "module": "input"
        },
        {
            "file": "StdLib\\keyboard.js",
            "line": 72,
            "itemtype": "method",
            "name": "isRepeat",
            "params": [
                {
                    "name": "key",
                    "description": "ASCII key stroke value",
                    "type": "Integer"
                }
            ],
            "class": "keyboard",
            "module": "input"
        },
        {
            "file": "StdLib\\math.js",
            "line": 14,
            "description": "This function converts degrees to radians.",
            "itemtype": "method",
            "name": "degToRadians",
            "params": [
                {
                    "name": "deg",
                    "description": "",
                    "type": "Floast"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "math",
            "module": "StdLib"
        },
        {
            "file": "StdLib\\pixel.js",
            "line": 7,
            "description": "Description",
            "itemtype": "method",
            "name": "Pixel",
            "params": [
                {
                    "name": "r",
                    "description": ""
                },
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "b",
                    "description": ""
                },
                {
                    "name": "a",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "graphics",
            "module": "StdLib"
        },
        {
            "file": "StdLib\\pixel.js",
            "line": 23,
            "description": "Description",
            "itemtype": "method",
            "name": "isTransparent",
            "return": {
                "description": "Literal"
            },
            "class": "graphics",
            "module": "StdLib"
        },
        {
            "file": "StdLib\\sprite.js",
            "line": 13,
            "description": "Private Globals",
            "class": "graphics",
            "module": "graphics"
        },
        {
            "file": "StdLib\\sprite.js",
            "line": 23,
            "description": "Public methods",
            "class": "graphics",
            "module": "graphics"
        },
        {
            "file": "StdLib\\sprite.js",
            "line": 48,
            "description": "Description",
            "itemtype": "method",
            "name": "buildImageData",
            "return": {
                "description": ""
            },
            "class": "Sprite",
            "module": "graphics"
        },
        {
            "file": "StdLib\\sprite.js",
            "line": 63,
            "description": "Description",
            "itemtype": "method",
            "name": "getPixelColor",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": "pixel"
            },
            "class": "Sprite",
            "module": "graphics"
        },
        {
            "file": "StdLib\\sprite.js",
            "line": 87,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Float"
                },
                {
                    "name": "rotation",
                    "description": "The ammount an image should be rotated when drawn in degrees.\nthe function itself converts this to radians when the drawing to the canvas takes place.",
                    "type": "Float"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Sprite",
            "module": "graphics"
        },
        {
            "file": "StdLib\\spriteStrip.js",
            "line": 30,
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "frame",
                    "description": "",
                    "type": "Integer || string"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Canvas.context"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "SpriteStrip",
            "module": "graphics"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: depreciated with deprecated",
            "line": " GH\\Interface\\hud.js:39"
        },
        {
            "message": "param name missing: {Canvas.context}",
            "line": " GH\\agent.js:355"
        },
        {
            "message": "replacing incorrect tag: parma with param",
            "line": " GH\\json.js:528"
        },
        {
            "message": "replacing incorrect tag: parma with param",
            "line": " GH\\map.js:132"
        },
        {
            "message": "param name missing: {[Agent]}",
            "line": " GH\\player.js:17"
        },
        {
            "message": "unknown tag: apram",
            "line": " GH\\weapon.js:14"
        },
        {
            "message": "replacing incorrect tag: depreciated with deprecated",
            "line": " StdLib\\animation.js:13"
        },
        {
            "message": "replacing incorrect tag: parma with param",
            "line": " StdLib\\sprite.js:87"
        },
        {
            "message": "Missing item type\nPrivate globals",
            "line": " GH\\Interface\\diceSplashScreen.js:44"
        },
        {
            "message": "Missing item type\nPublic methods",
            "line": " GH\\Interface\\diceSplashScreen.js:53"
        },
        {
            "message": "Missing item type\nPrivate constants",
            "line": " GH\\Interface\\hud.js:8"
        },
        {
            "message": "Missing item type\nPrivate globals",
            "line": " GH\\Interface\\hud.js:29"
        },
        {
            "message": "Missing item type\nPrivate methods",
            "line": " GH\\Interface\\hud.js:35"
        },
        {
            "message": "Missing item type\nPublic Methods",
            "line": " GH\\Interface\\hud.js:55"
        },
        {
            "message": "Missing item type\nActive Agent Display",
            "line": " GH\\Interface\\hud.js:85"
        },
        {
            "message": "Missing item type\nSetup the next players turn",
            "line": " GH\\Interface\\hud.js:198"
        },
        {
            "message": "Missing item type\nHud maintenance re new turn",
            "line": " GH\\Interface\\hud.js:214"
        },
        {
            "message": "Missing item type\nCenter board view onto new agent",
            "line": " GH\\Interface\\hud.js:219"
        },
        {
            "message": "Missing item type\nHandle the cosmetic changs of the actions state buttons",
            "line": " GH\\Interface\\hud.js:229"
        },
        {
            "message": "Missing item type\nUpdate the current player/agents action state",
            "line": " GH\\Interface\\hud.js:240"
        },
        {
            "message": "Missing item type",
            "line": " GH\\cell.js:2"
        },
        {
            "message": "Missing item type\nDetermine which image should be checked\nThis code is a bit brute force.\nMay need to consider including a door state variable which points to the relevant\nimage in the imageState variable.",
            "line": " GH\\door.js:161"
        },
        {
            "message": "Missing item type\nPublic globals",
            "line": " GH\\gh.js:9"
        },
        {
            "message": "Missing item type\nPublic methods",
            "line": " GH\\gh.js:19"
        },
        {
            "message": "Missing item type\nPrivate globals",
            "line": " GH\\json.js:20"
        },
        {
            "message": "Missing item type\nThe AI\n\nMOVE THIS TO EITHER AGENT OR AN INDEPENDENT CLASS/OBJECT STRUCTURE\n\nAttack the target if in range\nDetermine the most suitable target\nMove to within range of target",
            "line": " GH\\stateGame.js:73"
        },
        {
            "message": "Missing item type\nhandle agent input",
            "line": " GH\\stateGame.js:122"
        },
        {
            "message": "Missing item type\nSpacebar to center on active agent",
            "line": " GH\\stateGame.js:127"
        },
        {
            "message": "Missing item type\nHandle agent movement",
            "line": " GH\\stateGame.js:135"
        },
        {
            "message": "Missing item type\nProceed to stateGame.\nInitialize the game hud and stateGame objects.",
            "line": " GH\\stateSetup.js:85"
        },
        {
            "message": "Missing item type\nClass Display",
            "line": " StdLib\\display.js:15"
        },
        {
            "message": "Missing item type\nPublic methods",
            "line": " StdLib\\display.js:23"
        },
        {
            "message": "Missing item type\nglobal constants",
            "line": " StdLib\\keyboard.js:18"
        },
        {
            "message": "Missing item type\nPrivate Globals",
            "line": " StdLib\\sprite.js:13"
        },
        {
            "message": "Missing item type\nPublic methods",
            "line": " StdLib\\sprite.js:23"
        }
    ]
}